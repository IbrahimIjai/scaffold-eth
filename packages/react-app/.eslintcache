[{"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/index.jsx":"1","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/App.jsx":"2","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/constants.js":"3","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/contracts/external_contracts.js":"4","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/index.js":"5","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/index.js":"6","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/helpers/index.js":"7","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/hooks/index.js":"8","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/helpers/Web3ModalSetup.js":"9","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/helpers/ipfs.js":"10","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/hooks/useDebounce.js":"11","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/hooks/useContractConfig.js":"12","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/hooks/useStaticJsonRPC.js":"13","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/hooks/useLocalStorage.js":"14","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/helpers/Transactor.js":"15","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Account.jsx":"16","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/AddressInput.jsx":"17","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/BytesStringInput.jsx":"18","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Events.jsx":"19","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Faucet.jsx":"20","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/EtherInput.jsx":"21","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/GasGauge.jsx":"22","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Header.jsx":"23","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Blockie.jsx":"24","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Address.jsx":"25","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Balance.jsx":"26","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Ramp.jsx":"27","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Swap.jsx":"28","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Provider.jsx":"29","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/NetworkSwitch.jsx":"30","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/ThemeSwitch.jsx":"31","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/NetworkDisplay.jsx":"32","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/L2Bridge.jsx":"33","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/MultiAddressInput.jsx":"34","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/FaucetHint.jsx":"35","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/TokenSelect.jsx":"36","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/Preview.jsx":"37","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/Home.jsx":"38","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/ExampleUI.jsx":"39","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/TokenBalance.jsx":"40","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Wallet.jsx":"41","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Timeline.jsx":"42","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/Subgraph.jsx":"43","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/Hints.jsx":"44","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/helpers/loadAppContracts.js":"45","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Contract/index.jsx":"46","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Contract/FunctionForm.jsx":"47","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Contract/DisplayVariable.jsx":"48","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Contract/utils.jsx":"49"},{"size":973,"mtime":1673383985190,"results":"50","hashOfConfig":"51"},{"size":14908,"mtime":1674169257435,"results":"52","hashOfConfig":"51"},{"size":6589,"mtime":1673384092098,"results":"53","hashOfConfig":"51"},{"size":13704,"mtime":1673383985186,"results":"54","hashOfConfig":"51"},{"size":1302,"mtime":1673383985186,"results":"55","hashOfConfig":"51"},{"size":236,"mtime":1674166033204,"results":"56","hashOfConfig":"51"},{"size":148,"mtime":1673383985189,"results":"57","hashOfConfig":"51"},{"size":223,"mtime":1673383985190,"results":"58","hashOfConfig":"51"},{"size":3001,"mtime":1673384092100,"results":"59","hashOfConfig":"51"},{"size":533,"mtime":1673383985189,"results":"60","hashOfConfig":"51"},{"size":374,"mtime":1673383985190,"results":"61","hashOfConfig":"51"},{"size":417,"mtime":1673383985190,"results":"62","hashOfConfig":"51"},{"size":773,"mtime":1673383985190,"results":"63","hashOfConfig":"51"},{"size":2138,"mtime":1673383985190,"results":"64","hashOfConfig":"51"},{"size":5310,"mtime":1673383985189,"results":"65","hashOfConfig":"51"},{"size":2869,"mtime":1673384092095,"results":"66","hashOfConfig":"51"},{"size":4192,"mtime":1673383985182,"results":"67","hashOfConfig":"51"},{"size":2895,"mtime":1673383985183,"results":"68","hashOfConfig":"51"},{"size":1186,"mtime":1673384092096,"results":"69","hashOfConfig":"51"},{"size":2919,"mtime":1673384092096,"results":"70","hashOfConfig":"51"},{"size":2727,"mtime":1673383985183,"results":"71","hashOfConfig":"51"},{"size":758,"mtime":1673383985184,"results":"72","hashOfConfig":"51"},{"size":916,"mtime":1674165780077,"results":"73","hashOfConfig":"51"},{"size":414,"mtime":1673383985183,"results":"74","hashOfConfig":"51"},{"size":3341,"mtime":1673383985182,"results":"75","hashOfConfig":"51"},{"size":1738,"mtime":1673383985182,"results":"76","hashOfConfig":"51"},{"size":3921,"mtime":1673383985185,"results":"77","hashOfConfig":"51"},{"size":23511,"mtime":1673383985185,"results":"78","hashOfConfig":"51"},{"size":2420,"mtime":1673383985185,"results":"79","hashOfConfig":"51"},{"size":775,"mtime":1673383985185,"results":"80","hashOfConfig":"51"},{"size":889,"mtime":1673383985185,"results":"81","hashOfConfig":"51"},{"size":3613,"mtime":1673384092097,"results":"82","hashOfConfig":"51"},{"size":13151,"mtime":1673383985184,"results":"83","hashOfConfig":"51"},{"size":4282,"mtime":1673383985184,"results":"84","hashOfConfig":"51"},{"size":1327,"mtime":1673384092097,"results":"85","hashOfConfig":"51"},{"size":4631,"mtime":1673383985186,"results":"86","hashOfConfig":"51"},{"size":12070,"mtime":1673384092103,"results":"87","hashOfConfig":"51"},{"size":8283,"mtime":1674206512913,"results":"88","hashOfConfig":"51"},{"size":7564,"mtime":1673384092101,"results":"89","hashOfConfig":"51"},{"size":1175,"mtime":1673383985186,"results":"90","hashOfConfig":"51"},{"size":9358,"mtime":1673384092098,"results":"91","hashOfConfig":"51"},{"size":4146,"mtime":1673383985185,"results":"92","hashOfConfig":"51"},{"size":5910,"mtime":1673384092104,"results":"93","hashOfConfig":"51"},{"size":9082,"mtime":1673383985191,"results":"94","hashOfConfig":"51"},{"size":402,"mtime":1673383985189,"results":"95","hashOfConfig":"51"},{"size":4197,"mtime":1673384092096,"results":"96","hashOfConfig":"51"},{"size":8220,"mtime":1673384092095,"results":"97","hashOfConfig":"51"},{"size":1268,"mtime":1673383985183,"results":"98","hashOfConfig":"51"},{"size":1200,"mtime":1673383985183,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"7n8hct",{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/index.jsx",[],["201","202"],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/App.jsx",["203","204","205","206","207","208","209","210"],"import { Button, Col, Menu, Row, Modal, Select } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  Account,\n  Contract,\n  Faucet,\n  GasGauge,\n  Header,\n  Ramp,\n  ThemeSwitch,\n  NetworkDisplay,\n  FaucetHint,\n  NetworkSwitch,\n} from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\";\n// contracts\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { Home, Preview } from \"./views\";\nimport { useStaticJsonRPC } from \"./hooks\";\n\nconst { ethers } = require(\"ethers\");\n/*\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    🌏 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// 📡 What chain are your contracts deployed to?\nlet initialNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nlet DEBUG = true;\nconst NETWORKCHECK = true;\nconst USE_BURNER_WALLET = true; // toggle burner wallet feature\nconst USE_NETWORK_SELECTOR = false;\n\nif (process.env.NODE_ENV === \"production\") {\n  DEBUG = false;\n  initialNetwork = NETWORKS.goerli;\n}\n\nconst web3Modal = Web3ModalSetup();\n\n// 🛰 providers\nconst providers = [\n  \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n  `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`,\n  \"https://rpc.scaffoldeth.io:48544\",\n];\n\nfunction App(props) {\n  // specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n  // reference './constants.js' for other networks\n  const networkOptions = [initialNetwork.name, \"mainnet\", \"rinkeby\"];\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  const [selectedNetwork, setSelectedNetwork] = useState(networkOptions[0]);\n  const location = useLocation();\n\n  const targetNetwork = NETWORKS[selectedNetwork];\n\n  // 🔭 block explorer URL\n  const blockExplorer = targetNetwork.blockExplorer;\n\n  // load all your providers\n  const localProvider = useStaticJsonRPC([\n    process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl,\n  ]);\n  const mainnetProvider = useStaticJsonRPC(providers);\n\n  if (DEBUG) console.log(`Using ${selectedNetwork} network`);\n\n  // 🛰 providers\n  if (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider, USE_BURNER_WALLET);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // const contractConfig = useContractConfig();\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local 📝 contract and read a value from it:\n  console.log(contractConfig);\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  const ContractName = \"ThisSocks\";\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n    // eslint-disable-next-line\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  const accesories = [\"Eye\", \"Head\", \"Neck\", \"Perch\", \"Background\"];\n  const [selectedCollectible, setSelectedCollectible] = useState();\n  const [yourCollectibleSVG, setYourCollectibleSVG] = useState();\n\n  const [selectedAccesory, setSelectedAccesory] = useState(accesories[0]);\n  const [selectedAccesoryBalance, setSelectedAccesoryBalance] = useState(accesories[0]);\n  const [yourAccesories, setYourAccesories] = useState();\n  const [previewAccesory, setPreviewAccesory] = useState({});\n  const perPage = 10;\n\n  // 🧠 This effect will update yourCollectibles by polling when your balance changes\n  const AccesoryBalanceContract = useContractReader(readContracts, selectedAccesory, \"balanceOf\", [address]);\n\n  useEffect(() => {\n    if (AccesoryBalanceContract) {\n      setSelectedAccesoryBalance(AccesoryBalanceContract);\n    }\n  }, [AccesoryBalanceContract]);\n\n  useEffect(() => {\n    const updateYourCollectibleSVG = async () => {\n      try {\n        console.log(\"Getting token index \" + selectedCollectible);\n        const tokenId = selectedCollectible;\n        console.log(\"tokenId: \" + tokenId);\n        const svg =\n          readContracts[ContractName] && tokenId && (await readContracts[ContractName].renderTokenById(tokenId));\n        const newYourCollectibleSVG =\n          '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"300\" height=\"300\" viewBox=\"0 0 880 880\">' +\n          svg +\n          \"</svg>\";\n        setYourCollectibleSVG(newYourCollectibleSVG);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (address && selectedCollectible) {\n      updateYourCollectibleSVG();\n    }\n  }, [address, readContracts, selectedCollectible]);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleOk = () => {\n    setIsModalOpen(false);\n    setPreviewAccesory({});\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n    setPreviewAccesory({});\n  };\n\n  const [debugAccessorySelected, setDebugAccessorySelected] = useState(accesories[0]);\n\n  return (\n    <div className=\"App\">\n      {/* ✏️ Edit the header and change the title to your project name */}\n      <Header title=\"This Socks\">\n        {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n        <div style={{ position: \"relative\", display: \"flex\", flexDirection: \"column\" }}>\n          <div style={{ display: \"flex\", flex: 1 }}>\n            {USE_NETWORK_SELECTOR && (\n              <div style={{ marginRight: 20 }}>\n                <NetworkSwitch\n                  networkOptions={networkOptions}\n                  selectedNetwork={selectedNetwork}\n                  setSelectedNetwork={setSelectedNetwork}\n                />\n              </div>\n            )}\n            <Account\n              useBurner={USE_BURNER_WALLET}\n              address={address}\n              localProvider={localProvider}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              price={price}\n              web3Modal={web3Modal}\n              loadWeb3Modal={loadWeb3Modal}\n              logoutOfWeb3Modal={logoutOfWeb3Modal}\n              blockExplorer={blockExplorer}\n            />\n          </div>\n        </div>\n      </Header>\n      {yourLocalBalance.lte(ethers.BigNumber.from(\"0\")) && selectedNetwork === \"localhost\" && (\n        <FaucetHint localProvider={localProvider} targetNetwork={targetNetwork} address={address} />\n      )}\n      <NetworkDisplay\n        NETWORKCHECK={NETWORKCHECK}\n        localChainId={localChainId}\n        selectedChainId={selectedChainId}\n        targetNetwork={targetNetwork}\n        logoutOfWeb3Modal={logoutOfWeb3Modal}\n        USE_NETWORK_SELECTOR={USE_NETWORK_SELECTOR}\n      />\n\n      <Menu\n        style={{ textAlign: \"center\", marginTop: 20, justifyContent: \"center\" }}\n        selectedKeys={[location.pathname]}\n        mode=\"horizontal\"\n      >\n        <Menu.Item key=\"/\">\n          <Link to=\"/\">Your Collectible</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/debug\">\n          <Link to=\"/debug\">Debug Contracts</Link>\n        </Menu.Item>\n      </Menu>\n\n      <Switch>\n        <Route exact path=\"/\">\n          {/* pass in any web3 props to this Home component. For example, yourLocalBalance */}\n          <Home\n            userSigner={userSigner}\n            readContracts={readContracts}\n            writeContracts={writeContracts}\n            tx={tx}\n            loadWeb3Modal={loadWeb3Modal}\n            blockExplorer={blockExplorer}\n            address={address}\n            setSelectedCollectible={setSelectedCollectible}\n            ContractName={\"ThisSocks\"}\n            showModal={showModal}\n            DEBUG={DEBUG}\n            perPage={perPage}\n            gasPrice={gasPrice}\n          />\n          <Modal\n            width=\"70%\"\n            title={\"Add or remove accessories\"}\n            open={isModalOpen}\n            onOk={handleOk}\n            onCancel={handleCancel}\n          >\n            <Preview\n              userSigner={userSigner}\n              readContracts={readContracts}\n              writeContracts={writeContracts}\n              tx={tx}\n              loadWeb3Modal={loadWeb3Modal}\n              blockExplorer={blockExplorer}\n              address={address}\n              ContractName={\"YourCollectible\"}\n              accesories={accesories}\n              selectedCollectible={selectedCollectible}\n              selectedAccesory={selectedAccesory}\n              setSelectedAccesory={setSelectedAccesory}\n              yourAccesories={yourAccesories}\n              yourCollectibleSVG={yourCollectibleSVG}\n              selectedAccesoryBalance={selectedAccesoryBalance}\n              previewAccesory={previewAccesory}\n              setPreviewAccesory={setPreviewAccesory}\n              DEBUG={DEBUG}\n              gasPrice={gasPrice}\n            />\n          </Modal>\n        </Route>\n        <Route exact path=\"/debug\">\n          <Contract\n            name=\"ThisSocks\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n          />\n        </Route>\n      </Switch>\n\n      <ThemeSwitch />\n\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                💬\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/constants.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/contracts/external_contracts.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/index.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/index.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/helpers/index.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/hooks/index.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/helpers/Web3ModalSetup.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/helpers/ipfs.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/hooks/useDebounce.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/hooks/useContractConfig.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/hooks/useStaticJsonRPC.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/hooks/useLocalStorage.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/helpers/Transactor.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Account.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/AddressInput.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/BytesStringInput.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Events.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Faucet.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/EtherInput.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/GasGauge.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Header.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Blockie.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Address.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Balance.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Ramp.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Swap.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Provider.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/NetworkSwitch.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/ThemeSwitch.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/NetworkDisplay.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/L2Bridge.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/MultiAddressInput.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/FaucetHint.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/TokenSelect.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/Preview.jsx",["211","212","213","214","215"],"import { Button, Select } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\n/**\n * web3 props can be passed from '../App.jsx' into your local view component for use\n * @param {*} yourLocalBalance balance on current network\n * @param {*} readContracts contracts from current chain already pre-loaded using ethers contract module. More here https://docs.ethers.io/v5/api/contract/contract/\n * @returns react component\n **/\nfunction Preview({\n  userSigner,\n  readContracts,\n  writeContracts,\n  tx,\n  loadWeb3Modal,\n  blockExplorer,\n  mainnetProvider,\n  address,\n  accesories,\n  selectedCollectible,\n  ContractName,\n  selectedAccesory,\n  setSelectedAccesory,\n  yourAccesories,\n  yourCollectibleSVG,\n  selectedAccesoryBalance,\n  previewAccesory,\n  setPreviewAccesory,\n  DEBUG,\n  gasPrice,\n}) {\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n  const [yourPreviewSVG, setPreviewSVG] = useState();\n\n  // 🧠 This effect will update Accesory by polling when your balance changes\n  const [priceToMint, setPriceToMint] = useState();\n\n  const initialPreview = {};\n  const [previewOperation, setPreviewOperation] = useState();\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const priceToMint = readContracts[selectedAccesory] && (await readContracts[selectedAccesory].price());\n      if (priceToMint) {\n        setPriceToMint(priceToMint);\n      }\n    };\n\n    fetchPrice();\n  }, [address, readContracts, selectedAccesory]);\n\n  DEBUG && console.log(\"selectedCollectible: \", selectedCollectible);\n  DEBUG && console.log(\"Accesories: \", accesories);\n  DEBUG && console.log(\"🤗 priceToMint:\", priceToMint);\n  DEBUG && console.log(\"selected Accesory: \", selectedAccesory);\n  DEBUG && console.log(\"previewOperation: \", previewOperation);\n  DEBUG && console.log(\"previewAccesory: \", previewAccesory);\n\n  useEffect(() => {\n    const updatePreview = async () => {\n      const tokenId = selectedCollectible;\n      DEBUG && console.log(\"tokenId: \" + tokenId);\n      const svg = readContracts[ContractName] && (await readContracts[ContractName].renderTokenById(tokenId));\n      let accesorySVG = \"\";\n      for (const accesory in previewAccesory) {\n        accesorySVG +=\n          readContracts[accesory] && (await readContracts[accesory].renderTokenById(previewAccesory[accesory]));\n      }\n      const newPreviewSVG =\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"300\" height=\"300\" viewBox=\"0 0 880 880\">' +\n        accesorySVG +\n        svg +\n        \"</svg>\";\n      setPreviewSVG(newPreviewSVG);\n    };\n    updatePreview();\n  }, [selectedCollectible, previewAccesory, DEBUG]);\n\n  const checkForAccesories = async accesory => {\n    const contractAddress = readContracts[accesory] && (await readContracts[accesory].address);\n    try {\n      const hasAccesory =\n        readContracts[ContractName] &&\n        selectedCollectible &&\n        (await readContracts[ContractName].hasNft(contractAddress, selectedCollectible));\n      return hasAccesory;\n    } catch (e) {\n      DEBUG && console.log(e);\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    const fetchAccesoryStatue = async () => {\n      const newpreviewOperation = {};\n      for (let accesory = 0; accesory < accesories.length; accesory++) {\n        const accesoryType = accesories[accesory];\n        const contractAddress = readContracts[accesoryType] && (await readContracts[accesoryType].address);\n        try {\n          const hasAccesory =\n            readContracts[ContractName] &&\n            selectedCollectible &&\n            (await readContracts[ContractName].hasNft(contractAddress, selectedCollectible));\n          if (hasAccesory === true) {\n            newpreviewOperation[accesoryType] = [\"remove\"];\n          }\n        } catch (e) {\n          DEBUG && console.log(e);\n          return false;\n        }\n      }\n      for (const accesory in previewAccesory) {\n        newpreviewOperation[accesory] = [\"wear\", \"stop\"];\n      }\n      setPreviewOperation(newpreviewOperation);\n    };\n    fetchAccesoryStatue();\n  }, [selectedAccesoryBalance, selectedCollectible]);\n\n  const AddPreviewAccesory = async (accesoryType, accesoryId) => {\n    const hasAccesory = await checkForAccesories(accesoryType);\n    DEBUG && console.log(\"hasAccesory: \", accesoryType, hasAccesory);\n    if (hasAccesory === true) {\n      const newpreviewOperation = { ...previewOperation };\n      newpreviewOperation[accesoryType] = [\"remove\"];\n      setPreviewOperation(newpreviewOperation);\n    } else if (hasAccesory === false) {\n      const newPreviewAccesory = { ...previewAccesory };\n      newPreviewAccesory[accesoryType] = accesoryId;\n\n      const newpreviewOperation = { ...previewOperation };\n      newpreviewOperation[accesoryType] = [\"wear\", \"stop\"];\n\n      setPreviewOperation(newpreviewOperation);\n      setPreviewAccesory(newPreviewAccesory);\n    }\n  };\n\n  const RemovePreviewAccesory = accesoryType => {\n    const newPreviewAccesory = { ...previewAccesory };\n    delete newPreviewAccesory[accesoryType];\n\n    const newpreviewOperation = { ...previewOperation };\n    newpreviewOperation[accesoryType] = [];\n\n    setPreviewOperation(newpreviewOperation);\n    setPreviewAccesory(newPreviewAccesory);\n  };\n\n  const ExecutePreviewOperation = (operationType, accesoryType) => {\n    if (operationType === String(\"remove\")) {\n      tx(\n        writeContracts[ContractName].removeNftFromLoogie(readContracts[accesoryType].address, selectedCollectible),\n        function (transaction) {\n          RemovePreviewAccesory(accesoryType);\n        },\n      );\n    } else if (operationType === String(\"wear\") && previewAccesory[accesoryType]) {\n      const tankIdInBytes = \"0x\" + parseInt(selectedCollectible).toString(16).padStart(64, \"0\");\n\n      tx(\n        writeContracts[accesoryType][\"safeTransferFrom(address,address,uint256,bytes)\"](\n          address,\n          readContracts[ContractName].address,\n          previewAccesory[accesoryType],\n          tankIdInBytes,\n        ),\n        function (transaction) {\n          RemovePreviewAccesory(accesoryType);\n        },\n      );\n    }\n  };\n\n  return (\n    <div\n      style={{ Width: \"100%\", display: \"flex\", flexWrap: \"wrap\", alignItems: \"top\", justifyContent: \"space-between\" }}\n    >\n      <div style={{ flex: 1, margin: \"32px auto auto auto\" }}>\n        {yourCollectibleSVG && (\n          <div\n            style={{\n              minWidth: \"200px\",\n              minHeight: \"200px\",\n              width: \"100%\",\n              height: \"100%\",\n              margin: \"1%\",\n              padding: \"10px\",\n              border: \"1px solid\",\n            }}\n          >\n            <div\n              style={{ marginBottom: \"10px\", width: \"100%\", height: \"100%\" }}\n              dangerouslySetInnerHTML={{ __html: yourPreviewSVG ? yourPreviewSVG : yourCollectibleSVG }}\n            ></div>\n          </div>\n        )}\n        {accesories && (\n          <div style={{ Width: \"100%\", display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n            {accesories.map(accesory => {\n              const defaultAction = accesory + \" action\";\n              return (\n                <Select\n                  style={{\n                    width: 120,\n                    margin: 2,\n                  }}\n                  defaultValue={defaultAction}\n                  value={defaultAction}\n                  onChange={value => {\n                    value === String(\"stop\")\n                      ? RemovePreviewAccesory(accesory)\n                      : ExecutePreviewOperation(value, accesory);\n                  }}\n                >\n                  {previewOperation &&\n                    previewOperation[accesory] &&\n                    previewOperation[accesory].map(operation => {\n                      const tooltip = { operation } + { accesory };\n                      const icon = operation === String(\"wear\") ? \"✔\" : operation === String(\"remove\") ? \"🔥\" : \"❌\";\n                      return (\n                        <Select.Option value={operation} tooltip={tooltip}>\n                          {icon} {accesory}\n                        </Select.Option>\n                      );\n                    })}\n                </Select>\n              );\n            })}\n          </div>\n        )}\n      </div>\n      <div style={{ flex: 3, margin: \"32px auto auto auto\" }}>\n        {userSigner ? (\n          <div style={{ display: \"flex\", Width: \"100%\", margin: \"auto\", justifyContent: \"center\" }}>\n            <Select\n              style={{\n                width: 120,\n                margin: 10,\n              }}\n              defaultValue={selectedAccesory}\n              onChange={value => {\n                DEBUG && console.log(\"🤗 setSelectedAccesory:\", value);\n                setSelectedAccesory(value);\n              }}\n            >\n              {accesories.map(accesory => (\n                <Select.Option value={accesory}>{accesory}</Select.Option>\n              ))}\n            </Select>\n\n            <Button\n              type={\"primary\"}\n              style={{\n                margin: 10,\n              }}\n              onClick={async () => {\n                const priceRightNow =\n                  readContracts[selectedAccesory] && (await readContracts[selectedAccesory].price());\n                DEBUG && console.log(\"🤗 priceRightNow:\", priceRightNow);\n                try {\n                  tx(\n                    writeContracts[selectedAccesory] &&\n                      writeContracts[selectedAccesory].mintItem({ value: priceRightNow, gasLimit: 500000 }),\n                    function (transaction) {},\n                  );\n                } catch (e) {\n                  DEBUG && console.log(\"mint failed\", e);\n                }\n              }}\n            >\n              MINT {selectedAccesory} for Ξ{priceToMint && (+ethers.utils.formatEther(priceToMint)).toFixed(4)}s\n            </Button>\n          </div>\n        ) : (\n          <Button type={\"primary\"} onClick={loadWeb3Modal}>\n            CONNECT WALLET\n          </Button>\n        )}\n\n        <div style={{ Width: \"100%\", display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n          {yourAccesories &&\n            yourAccesories.map(nft => {\n              const id = nft.id.toNumber();\n              const isEnabled =\n                previewOperation &&\n                previewOperation[selectedAccesory] &&\n                previewOperation[selectedAccesory].length === 1 &&\n                previewOperation[selectedAccesory][0] === String(\"remove\");\n              return (\n                <div\n                  style={{\n                    minWidth: \"200px\",\n                    minHeight: \"200px\",\n                    width: \"20%\",\n                    height: \"100%\",\n                    margin: \"10px\",\n                    padding: \"2px\",\n                    border: \"1px solid\",\n                  }}\n                  key={id}\n                >\n                  <div>{nft.name}</div>\n                  <div>\n                    <a\n                      href={\n                        \"https://opensea.io/assets/\" +\n                        (readContracts && readContracts[selectedAccesory] && readContracts[selectedAccesory].address) +\n                        \"/\" +\n                        nft.id\n                      }\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <img width=\"100%\" height=\"100%\" src={nft.image} alt={nft.description} />\n                    </a>\n                  </div>\n                  <div style={{ marginBottom: \"10px\" }}>{nft.description}</div>\n                  <Button\n                    disabled={isEnabled}\n                    onClick={() => {\n                      AddPreviewAccesory(selectedAccesory, id);\n                    }}\n                  >\n                    ➕\n                  </Button>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Preview;\n","/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/Home.jsx",["216","217"],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/ExampleUI.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/TokenBalance.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Wallet.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Timeline.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/Subgraph.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/views/Hints.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/helpers/loadAppContracts.js",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Contract/index.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Contract/FunctionForm.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Contract/DisplayVariable.jsx",[],"/Users/emmanuelpepple/Development/blockchain/scaffold-eth/packages/react-app/src/components/Contract/utils.jsx",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":1,"column":41,"nodeType":"224","messageId":"225","endLine":1,"endColumn":47},{"ruleId":"222","severity":1,"message":"226","line":146,"column":9,"nodeType":"224","messageId":"225","endLine":146,"endColumn":27},{"ruleId":"222","severity":1,"message":"227","line":169,"column":9,"nodeType":"224","messageId":"225","endLine":169,"endColumn":28},{"ruleId":"222","severity":1,"message":"228","line":211,"column":26,"nodeType":"224","messageId":"225","endLine":211,"endColumn":43},{"ruleId":"222","severity":1,"message":"229","line":247,"column":10,"nodeType":"224","messageId":"225","endLine":247,"endColumn":24},{"ruleId":"222","severity":1,"message":"230","line":247,"column":26,"nodeType":"224","messageId":"225","endLine":247,"endColumn":43},{"ruleId":"222","severity":1,"message":"231","line":261,"column":10,"nodeType":"224","messageId":"225","endLine":261,"endColumn":32},{"ruleId":"222","severity":1,"message":"232","line":261,"column":34,"nodeType":"224","messageId":"225","endLine":261,"endColumn":59},{"ruleId":"222","severity":1,"message":"233","line":33,"column":10,"nodeType":"224","messageId":"225","endLine":33,"endColumn":29},{"ruleId":"222","severity":1,"message":"234","line":33,"column":31,"nodeType":"224","messageId":"225","endLine":33,"endColumn":53},{"ruleId":"222","severity":1,"message":"235","line":39,"column":9,"nodeType":"224","messageId":"225","endLine":39,"endColumn":23},{"ruleId":"236","severity":1,"message":"237","line":78,"column":6,"nodeType":"238","endLine":78,"endColumn":51,"suggestions":"239"},{"ruleId":"236","severity":1,"message":"240","line":119,"column":6,"nodeType":"238","endLine":119,"endColumn":52,"suggestions":"241"},{"ruleId":"222","severity":1,"message":"242","line":42,"column":10,"nodeType":"224","messageId":"225","endLine":42,"endColumn":17},{"ruleId":"222","severity":1,"message":"243","line":42,"column":19,"nodeType":"224","messageId":"225","endLine":42,"endColumn":29},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'yourMainnetBalance' is assigned a value but never used.","'myMainnetDAIBalance' is assigned a value but never used.","'setYourAccesories' is assigned a value but never used.","'confirmLoading' is assigned a value but never used.","'setConfirmLoading' is assigned a value but never used.","'debugAccessorySelected' is assigned a value but never used.","'setDebugAccessorySelected' is assigned a value but never used.","'transferToAddresses' is assigned a value but never used.","'setTransferToAddresses' is assigned a value but never used.","'initialPreview' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ContractName' and 'readContracts'. Either include them or remove the dependency array.","ArrayExpression",["246"],"React Hook useEffect has missing dependencies: 'ContractName', 'DEBUG', 'accesories', 'previewAccesory', and 'readContracts'. Either include them or remove the dependency array.",["247"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [selectedCollectible, previewAccesory, DEBUG, readContracts, ContractName]",{"range":"252","text":"253"},"Update the dependencies array to be: [ContractName, DEBUG, accesories, previewAccesory, readContracts, selectedAccesoryBalance, selectedCollectible]",{"range":"254","text":"255"},[2649,2694],"[selectedCollectible, previewAccesory, DEBUG, readContracts, ContractName]",[4108,4154],"[ContractName, DEBUG, accesories, previewAccesory, readContracts, selectedAccesoryBalance, selectedCollectible]"]